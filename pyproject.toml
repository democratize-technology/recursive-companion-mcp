[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "recursive-companion-mcp"
version = "1.0.0"
description = "MCP server for iterative refinement through self-critique cycles using AWS Bedrock. Inspired by Hank Besser's recursive-companion."
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Recursive Companion Contributors", email = "contact@thinkerz.ai"},
]
dependencies = [
    "mcp>=0.1.0",
    "boto3>=1.28.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "starlette>=0.47.2",
    "pip-licenses>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "moto>=4.0.0",
    "flake8>=6.0.0",
    "black>=24.3.0",
    "mypy>=1.0.0",
    "safety>=3.0.0",
    "bandit[toml]>=1.7.0",
    "pip-audit>=2.6.0",
    "isort>=5.12.0",
    "autoflake>=2.0.0",
    "pre-commit>=3.0.0",
]
release = [
    "python-semantic-release>=8.0.0",
    "tomli-w>=1.0.0",
    "twine>=4.0.0",
]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.flake8]
max-line-length = 100
ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "W293",  # blank line contains whitespace (black will fix)
    "W291",  # trailing whitespace (black will fix)
]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info",
    ".venv",
    "venv",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".venv", "venv", "__pycache__", ".git"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "tests/",
    "build/",
    "dist/",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601", "B110", "B603", "B404", "B607"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version"
]
build_command = "uv build"
upload_to_vcs_release = true

[dependency-groups]
dev = [
    "autoflake>=2.3.1",
    "black>=24.3.0",
    "isort>=6.0.1",
    "pip>=25.2",
    "pre-commit>=4.3.0",
    "pyyaml>=6.0.2",
]
